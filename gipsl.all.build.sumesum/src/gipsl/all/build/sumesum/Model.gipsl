package "gipsl.all.build.sumesum"
import "platform:/resource/gipsl.all.build.model/model/Model.ecore"

config {  
	solver := GLPK [home:="fu", license:="bar"];
	timeLimit := false [value:=120.0];
	presolve := true;
	debugOutput := true;
}

// This test files triggers the GPLK implementation bug:
// https://github.com/Echtzeitsysteme/gips/issues/32

rule mapVnode {
	root: Root {
		-containers -> substrateContainer
		-containers -> virtualContainer
	}
	
	substrateContainer: SubstrateContainer {
		-substrateNodes -> snode
	}
	
	virtualContainer: VirtualContainer {
		-virtualNodes -> vnode
	}
	
	snode: SubstrateResourceNode
	
	vnode: VirtualResourceNode {
		++ -host -> snode
	}
}

//
// GIPSL starts here!
//

mapping n2n with mapVnode;

constraint -> global {
//	mappings.n2n->sum(m | m.value()) == mappings.n2n->sum(m | m.value())
	mappings.n2n->count() + mappings.n2n->count() >= 0
}

objective mapped -> mapping::n2n {
	1
}

global objective : max {
	mapped
}