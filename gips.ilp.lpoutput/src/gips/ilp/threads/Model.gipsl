package gips.ilp.threads
import "platform:/resource/gips.ilp.timeout.timeoutmodel/model/Timeoutmodel.ecore"

config {  
	solver := GUROBI;
	presolve := true;
	debugOutput := false;
	
	// Hard-code a specific number of threads on purpose.
	// This value will later be overwritten in the test.
	threadCount := true[value := 4];
}

rule mapSrc {
	[=] root: Root {
		[=] -elements -> src
		[=] -elements -> trg
	}
	
	[=] src: Source {
		[+] -host -> trg
	}
	
	[=] trg: Target {
		[+] -srcs -> src
		.free := trg.free - src.val;
	}
};

//
// GIPSL starts here!
//

mapping s2t to mapSrc;

constraint with Target {
	mappings.s2t->sum(element.value) <= context.free
}
