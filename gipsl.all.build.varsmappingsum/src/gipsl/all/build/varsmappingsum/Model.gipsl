package "gipsl.all.build.varsmappingsum"
import "platform:/resource/gipsl.all.build.model/model/Model.ecore"
import "http://www.eclipse.org/emf/2002/Ecore"

config {  
	solver := GUROBI;
	timeLimit := true [value := 10.0];
	randomSeed := true [value := 0];
	presolve := true;
	debugOutput := false;
}

rule mapVnode {
	root: Root {
		-containers -> substrateContainer
		-containers -> virtualContainer
	}
	
	substrateContainer: SubstrateContainer {
		-substrateNodes -> snode
	}
	
	virtualContainer: VirtualContainer {
		-virtualNodes -> vnode
	}
	
	snode: SubstrateResourceNode
	
	vnode: VirtualResourceNode {
		++ -host -> snode
	}
	
	# vnode.resourceDemand <= snode.resourceAmountAvailable
	# snode.resourceAmountAvailable >= 0
}

//
// GIPSL starts here!
//

mapping n2n to mapVnode {
	var v : EInt
	var w : EDouble
	var x : EDouble
};

constraint with VirtualResourceNode {
	mappings.n2n->filter(element.nodes.vnode == context)->count() == 1
}

constraint with n2n {
	context.variables.x >= 0
}

constraint with n2n {
	context.variables.v >= 0
}

constraint with n2n {
	context.variables.w >= 0
}

constraint {
	mappings.n2n->sum(element.variables.x)
	+ mappings.n2n->sum(element.variables.v)
	+ mappings.n2n->sum(element.variables.w) == 42
}

function n2nObj with n2n {
	1
}

objective : max {
	functions.n2nObj
}
